@model Blog_Client.Models.BlogModel

@{
    ViewData["Title"] = "Index";

}
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
<h1>Display</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
@using (Html.BeginForm("Display", "Comment", FormMethod.Post))
{
    <table class="table">
        <thead>
            <tr>

                <th>
                    Message
                </th>
                <th>
                    PostBy
                </th>
                <th>
                    Posted Date
                </th>
                <th>
                    Comments
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var group in Model.CommentPostVM.GroupBy(x => new { x.PostID, x.PostMessage, x.PostBy }))
            {
                var c = group.Count();
                <tr>
                    <td>
                        @group.Key.PostMessage
                    </td>
                    <td>
                        @group.Key.PostBy
                    </td>
                    <td>
                        @group.FirstOrDefault().PostedDate
                    </td>
                    <td>
                        @group.Count() Comments
                    </td>
                </tr>
                foreach (var item in group)
                {

                    <tr>

                        <td>
                            @Html.DisplayFor(modelItem => item.CommentMessage)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CommentBy)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CommentedDate)
                        </td>
                        <td>
                            <div>
                                
                                <button type="button" class="btn btn-default btn-sm">
                                    <span class="glyphicon glyphicon-thumbs-up"></span>@Html.DisplayFor(modelItem => item.Likes)
                                </button>
                                <button type="button" class="btn btn-default btn-sm">
                                    <span class="glyphicon glyphicon-thumbs-down"></span>@Html.DisplayFor(modelItem => item.Dislikes)
                                </button>
</div>

                        </td>

                    </tr>

                }

            }
        </tbody>
    </table>
    <br />
    <table cellpadding="0" cellspacing="0">
        <tr>
            @for (int i = 1; i <= Model.PageCount; i++)
            {
                <td>
                    <table>
                        <tr>
                            <td>
                                @if (i != Model.CurrentPageIndex)
                                {
                                    <a type="button" class="btn btn-success" href="javascript:PagerClick(@i);">@i</a>
                                }
                                else
                                {
                                    <span> <a type="button" href="#" class="btn btn-success">@i</a></span>
                                }
                            </td>
                        </tr>
                    </table>

                </td>
            }
        </tr>
    </table>
    <input type="hidden" id="hfCurrentPageIndex" name="currentPageIndex" />
}
<script type="text/javascript">
    function PagerClick(index) {
        document.getElementById("hfCurrentPageIndex").value = index;
        document.forms[0].submit();
    }
</script>
@*@{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled">
        Next
    </a>*@
