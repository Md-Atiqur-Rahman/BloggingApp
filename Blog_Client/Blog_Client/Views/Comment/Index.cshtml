@model Blog_Client.PaginatedList<CommentPostVM>

@{
    ViewData["Title"] = "Index";
    int i = 0;
    int cp = Model.PageIndex;
    i = (cp - 1) * 10 + 1;
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Post Message
            </th>
            <th>
                Post By
            </th>
            <th>
                Post Date
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["CommentMessage"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Comment Message</a>

            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["CommentBy"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Comment By</a>

            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Date</a>

            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.PostMessage)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PostBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PostedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CommentMessage)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CommentBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CommentedDate)
            </td>

            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
